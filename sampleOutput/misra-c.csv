Section Info,Nearest Subheading,"Sentence with ""shall""",Page Number
6.2.1,Mandatory guidelines,C code which is claimed to conform to this document shall comply with every mandatory guideline — deviation from m andatory guidelines is not permitted.,6
6.2.2,Required guidelines,"C code which is claimed to conform to this document shall comply with every required guideline, with a formal deviation requi red, as described in Section  5.4, where this is not the case.",5
1.1,Any implementation-de ﬁ ned behaviour on which the output of the ,"program depends shall be documented and understood C90 [Annex G.3], C99 [Annex J.3] Category Required Applies to C90, C99 Ampli ﬁ cation Appendix  G of this document lists, for both C90 and C99, those implementation-deﬁ ned behaviours that: • Are considered to have the potential to cause unexpected program operation, and • May be present in a program even if it complies with all the other MISRA  C guidelin es.",5
3.1,All code shall be traceable  to documented requirements ,The method by which code is traced back to documented requirements shall be determined by the project.,1
4.3,Assembly language shall be encapsulated and isolated,"Category Required Applies to C90, C99 Ampli ﬁ cation Where assembly language instructions are used they shall be encapsul ated and isolated in: • Assembly language functions; • C functions ( inline f u nctions preferred for C99); • C macros.",1
4.7,"If a function returns error information, then that error information ","shall be tested Category Required Applies to C90, C99 Ampli ﬁ cation The list of functions that are deemed to return error information shall be determined by the project. The error informati on returned by a function shall be tested in a meaningful manner.",4
4.7,"If a function returns error information, then that error information ",Whenever such a mechanism is provided by a function the calling program shall check for the indication of an error as soon as the function returns.,4
4.10,Precautions shall be taken in order to preven t the contents of a header ,Copy 1 of 133 Section 7: Directives<start-of-file> #if !defined ( identifier )#define identifier /* Contents of file */#endif<end-of-file> <start-of-file> #ifndef identifier#define identifier /* Contents of file */#endif<end-of-file> Note: the identi ﬁ er used to test and record whether a given header ﬁ le has already been included shall be unique across all header ﬁ les in the project.,1
4.11,The validity of values passed to library func tions shall be checked,"The programmer shall provide appropriate checks of input values for all library functions which have a restricted input domain (The Standard Library, third-party libraries, and in-house libraries).",4
4.7,Dir 4.12 Dynamic memory allocation sh all not be used,"The speci ﬁ cation of third-party routines shall be checked to ensure that dynamic memory allocation is not being used inadvertently. If a decision is made to use dynamic memory, care shall be taken to ensure that the software behaves in a predictable manner.",10
1.1,The program shall contain no violations  of the standard C syntax and ,"constraints , and shall not exceed the implementation’s tr anslation limits [MISRA G uidelines Table 3], [IEC 61508-7: Table C.1], [ISO 26262-6: Table 1] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation The program shall use only those features of the C  language and its library that are speci ﬁ ed in the chosen version of The Standard (see Section 3.1).",2
1.1,The program shall contain no violations  of the standard C syntax and ,"Except when making use of a language extension, a program shall not: • Contain any violations of the language syntax described in The Standard; • Contain any violations of the co ns traints imposed by The Standard. A program shall not exceed the translation limits imposed by the implementation.",2
2.1,A project shall not contain unreachable code,"For example, in a switch statement in which every possible value of the controlling expression is covered by an explicit case , a default clause shall be present according to Rule  16.4.",14
4.1,Octal and hex adecimal escape sequences shall be term inated,"C90 [Implementation 11], C99 [Implementation J.3.4(7, 8)] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation An octal or hexadecimal escape sequenc e shall be terminated by either: • The start of another escape sequence, or • The end of the character constant or the end of a string literal.",141
5.5,Rule 5.3 An identi ﬁ er declared in an inner scope shall not hide an ident iﬁ er ,"declared in an outer scope Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation An identi ﬁ er declared in an inner scope shall be distinct from any identi ﬁ er declared in an outer scope.",1
5.6,A ty pedef  name shall be a unique identi ﬁ er,"Category Required Analysis Decidable, System Applies to C90, C99 Ampli ﬁ cation A typedef name shall be unique across all name space s and translation units.",0
5.7,A tag name shall be a unique identiﬁ  er,"Category Required Analysis Decidable, System Applies to C90, C99 Ampli ﬁ cation The tag shall be unique across all name spaces and translati on units. All declarations of the tag shall specify the same type.",0
5.6,Rule 5.8 Identi ﬁ ers that de ﬁ ne objects or functions with external linkage  shall ,"be unique Category Required Analysis Decidable, System Applies to C90, C99 Ampli ﬁ cation An identi ﬁ er used as an external identi ﬁ er shall not be used for any other p urpose in any name space or translation unit, even if it denotes an object with no linkage.",1
7.4,A string liter al shall not be assigned  to an object unless the object’s ,"type is “pointer to const -quali ﬁ ed char ” C90 [Unde ﬁ ned 12], C99 [Unspeci ﬁ ed 14; Unde ﬁ ned 30] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation No attempt shall be made to modify a string literal or wide string literal directly. The result of the address-of operator, &, applied to a string literal shall not be assigned to an object unless that object’s type is “pointer to array of const -quali ﬁ ed char ”.",1
7.4,A string liter al shall not be assigned  to an object unless the object’s ,"A wide string literal shall not be assigned to an o b j ect u n l ess th e o b j ect’ s type i s “po i n t e r t o const -quali ﬁ ed wchar_t ”. The result of the address-of operator, &, applied to a wide string literal shall not be assigned to an object unless that object’s type is “pointer to array of const -quali ﬁ ed wchar_t ”.",1
8.5,An external object or function shall be declared once in one and only ,"Note: there may be many header ﬁ les in a project, but each external object or function shall only be declared in one header ﬁ le.",0
8.8,The static  storage class speci ﬁ er shall be used in all declarations of ,The static storage class speci ﬁ er shall therefore be consistently applied to objects and functions with internal linkage.,0
8.12,"Within a n enumerator list, the value of an implicitly-speci ﬁ ed ","enumeration constant shall be unique Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Rational e An implicitly-speci ﬁ ed enumeration constant has a value 1 greater than its predecessor.",3
9.1,The value  of an object with automatic storage duration shall not be ,"read before it has been set C90 [Unde ﬁ ned 41], C99 [Unde ﬁ ned 10, 17] Category Mandatory Analysis Undecidable, System Applies to C90, C99 Ampli ﬁ ca tion For the purposes of this rule, an array element or structure member shall be considered as a discrete object.",15
9.3,Arrays shall not be partially initializ ed,"Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation If any element of an arra y object or subobject is explicitly initialized, then the entire object or subobject shall be explicitly initialized.",1
9.5,Where designated initializers are used t o initialize an array object the ,"size of the array shall be speci ﬁ ed explicitly Category Required Analysis Decidable, Single Translation Unit Applies to C99 Ampli ﬁ cation The rule applies equally t o an array subobject that is a ﬂ exible array member.",0
9.5,Where designated initializers are used t o initialize an array object the ,"Copy 1 of 181 Section 8: RulesTo make the intent clear, the array size shall be declared explicitly.",0
10.2,Expressions of essentially  character type  shall not be used ,"For the + o p erator, one operand shall have essentially character type and the other shall have essentially signed type or essentially unsigned type .",0
10.2,Expressions of essentially  character type  shall not be used ,"For the - operat or , the ﬁ rst operand shall have essentially character type and the second shall have essentially signed type , essentially unsigned type or essentially character type .",0
10.2,Expressions of essentially  character type  shall not be used ,Rationale Expressions with essentially character type (character data) shall not be used arithmetically as the data does not represent numeric values.,0
8.10.3,Rule 10.7 If a c omposite expression  is used as one operand of an operator in ,"which the u sual arithmetic conversions are performed then the other operand shall not have wider essential type Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Rationale The rationale is described in the introduction on composite operator s and expressions (see Section  8.10.3).",1
11.1,Conversions shall not be performed between a pointer to a function ,"and any other type C90 [Unde ﬁ ned 24, 27–29], C99 [Unde ﬁ ned 21, 23, 39, 4 1] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation A pointer to a function shall only be converted into or from a pointer to a function with a compatible type.",3
11.2,Conversions shall not be performed between a pointer to an ,"incomplete type and any other type C90 [Unde ﬁ ned 29], C99 [Unde ﬁ ned 21, 22, 41] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation A pointer to an incomplete type shall not be converted into another type. A conversion shall not be made into a pointer to incompl ete type.",1
11.3,Rule 11.9 The macr o NULL shall be the only per mitted form of integer null ,"pointer constant Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation An integer constant ex pression with the value 0 shall be derived from expansion of the macro NULL if it appears in any of the following contexts: • As the value being as sign ed to a pointer; • As an operand of an == or != operator whose other operand is a pointer; • As the second operand of a ?",0
11.3,Rule 11.9 The macr o NULL shall be the only per mitted form of integer null ,"Ignoring whitespace and any surrounding parentheses, any such integer constant expression shall represent the entire expansion of NULL.",0
13.2,The value of an expression  and its persistent side e ﬀ ects shall be the ,No object shall be modi ﬁ e d more than once; 2. No object shall be both modi ﬁ e d and read unless any such read of the object’s value contributes towards computing the value to be stored into the object; 3. There shall be no more than one modi ﬁ c ation access with volatile -quali ﬁ ed type; 4. There shall be no more than one read access with volat ile-quali ﬁ ed type.,0
13.6,The operand of the sizeof  operator shall not contain any expression ,"This rule mandates that the evaluation of any such expression shall not contain side eﬀ ects, whether or not it is actually evaluated.",1
14.2,A  for loop shall be well-form ed,"Category Required Analysis Undecidable, System Applies to C90, C99 Ampli ﬁ cation The three claus es of a for statement are the: First clause which • Shall be empty, or • Shall assign a value to the loop c ounter , or • Shall de ﬁ ne and initialize the lo op counter (C99). Second clause which • Shall be an expression that has no pe rsistent side e ﬀ ects, and • Shall use the loop c ounter and optionally loop control ﬂ ags, and • Shall not use any other object that is modi ﬁ e d in the for loop body. Third clause which • Shall be an expression whose only per s istent side e ﬀ ect is to modify the value of the loop counter , and • Shall not use objects that are modi ﬁ e d in the for loop body. There shall only be one loop counter in a for loop, which shall not be modi ﬁ ed in the for loop body.",0
14.2,Rule 14.4 The controlling expression of an if statement a nd the controlling ,"expression of an iteration- statement shall have essentially Boolean type Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation The controlling expression of a for statement is optional.",1
17.4,Rule 15.6 The body of an iteration-statement  or a selection-statement  shall be a ,"compound-statement [Koenig 24] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation The body of an iteration-statement (while , do … while or for ) or a selection -statement (if, else, switch ) shall be a compound-statement .",1
15.7,All if … else if constructs shall be terminated with an else  statement,"Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation A ﬁ nal else statement shall always be provided whenever an if statement is followed by a sequence of one or more else if constructs. The else statement shall contain at least either one side eﬀ ect or a comment.",16
16.1,All switch  s tatements shall be  well-formed,"Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation A switch stateme nt shall be considered to be well-formed if it conforms to the subset of C switch  statements that is speci ﬁ ed by the following syntax rules.",15
16.6,Rule 16.2 A switch label  shall only be used when the most closely-enclos ing ,"In order to prevent this, a switch label shall only appear at the outermost level of the compound statement forming the body of a switch statement.",1
6.1,Rule 16.3 An unconditional break  statement shall terminate every switch-clause,"Copy 1 of 1132Section 8: RulesTo ensure that such errors can be detected, the last statement in every switch-clause shall be a break  statement, or if the switch-clause is a compound statement, the last statement in the compound statement shall be a break statement.",0
16.1,Rule 16.4 Every switch  statement shall have a default  label,"Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation The switch-clause following the defau lt label shall, prior to the terminating break statement, contain either: • A statement, or • A comment.",2
17.1,The features of <stdarg.h>  shall not be used,"C90 [Unde ﬁ ned 45, 70–76], C99 [Unde ﬁ ned 81, 128–135] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation None of va_list , va_arg , va_start , va_end and, fo r C99, va_ copy shall be used.",1
15.5,Rule 17.5 The function argument corresponding to a parameter declared to ,"have an array type shall have an appropriate number of elements Category Advisory Analysis Undecidable, System Applies to C90, C99 Ampli ﬁ cation If a parameter is declared as an array with a s peciﬁ ed size, the correspon ding argument in each function call should point into an object that has at least as many elements as the array.",1
6.3.6,and C99 Section  6.5.6 for further information.,"Array subscripting over “internal” boundaries shall not be used, as such behaviour is unde ﬁ ned.",1
18.8,Variable-length array types shall not be used,"If a variable-length array is used in a context in which it is required to be compatible with another array type, possibly itself variable-length, then the size of the array types shall be identical. Further, all sizes shall evaluate to positive integers.",1
20.1,#include directiv es should only be preceded by preprocessor ,"directives or comments C90 [Unde ﬁ ned 56], C99 [Unde ﬁ ned 96, 97] Category Advisory Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation The rule shall be applied to the contents of a ﬁ le before preprocessing occurs.",1
20.7,Expressions resulting from  the expansion of macro parameters shall ,"be enclosed in parentheses [Koenig 78–81] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation If the expans ion of any macro parameter produces a token, or sequence of tokens, that form an expression then that expression, in the fully-expanded macro, shall either: • Be a parenthesized expression itself; or • Be enclosed in parentheses.",2
14.4,Rule 20.9 All identi ﬁ ers  used in the controlling exp ression of #if or #elif ,"preprocessing directives shall be #deﬁ ne’d before evaluation Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation As well as using a #de ﬁ ne pr eprocessor directive, identi ﬁ ers may e ﬀ ectively be #deﬁ ne’d in other, implementation-de ﬁ ned, ways.",1
20.12,"A macro parameter used as an operand to the # or ## o perators, ","which is itself subj ect to further macro replacement, shall only be used as an operand to these operators Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Rationale A macro parameter that is used as an operand of a # or ## operator is not expanded prior to being used.",0
21.3,The memory allocation and deallocation functions of <stdlib.h>  ,"shall not be used C90 [Unspeci ﬁ ed 19; Unde ﬁ ned 9, 91, 92; Implementation 69] C99 [Unspeci ﬁ ed 39, 40; Unde ﬁ ned 8, 9, 168–171; Implementation J.3.12(35)] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Amp liﬁ cation The identi ﬁ ers calloc , malloc , realloc and free shall not be used and no macro with one of these names shall be expanded.",4
21.4,The standard header ﬁ le <setjmp.h>  shall not  be used,"C90 [Unspeci ﬁ ed 14; Unde ﬁ ned 64–67] C99 [Unspeci ﬁ ed 32; Unde ﬁ ned 118–121, 173] [Koenig 74] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation None of the facilities that are sp eciﬁ ed as being provided by <setjmp.h> shall be used.",14
21.5,The standard header ﬁ le <signal.h>  shall not be  used,"C90 [Unde ﬁ ned 67–69; Implementation 48–52] C99 [Unde ﬁ ned 122–127; Implementation J.3.12(12)] [Koenig 74] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation None of the facilities that are speci ﬁ ed as being provided by <signal.h> shall be used.",67
7.24.2,and  7.24.3 of the C99 Standard as being ,None of these identi ﬁ ers shall be used and no macro with one of these names shall be expanded.,6
21.7,"The atof, atoi , atol  and atoll  functions of <stdlib.h>  shall not be ","used C90 [Unde ﬁ ned 90], C99 [Unde ﬁ ne d 113] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation The identi ﬁ ers atof, atoi, atol and, for C99 only atoll , shall not be used and no macro wit h one of these names shall be expanded.",90
21.8,"The library functions abort , exit, getenv  and system  of <stdlib.h>  ","shall not be used C90 [Unde ﬁ ned 93; Im plementation 70–73] C99 [Unde ﬁ ned 172, 174, 175; Implementation J.3.12(36–38)] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation The identi ﬁ ers abort , exit, getenv and system shall not be used and no macro with one of thes e names shall be expanded.",1
21.9,The lib rary functions bsearch  and qsort  of <stdlib.h>  shall not be ,"used C90 [Unspeci ﬁ ed 20, 21], C99 [Unspe ciﬁ ed 41, 42; Unde ﬁ ned 176–178] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation The identi ﬁ ers bsearch and qsort shall not be used and no macro with one of these names shall be expanded.",0
21.10,The Standard Library time and date functions shall not be used,"C90 [Unspeci ﬁ ed 22; Unde ﬁ ned 80, 97; Impleme ntation 75, 76] C99 [Unspeci ﬁ ed 43, 44; Unde ﬁ ned 146, 154, 182; Implementation J.3.12(39–42)] Category Required Analysis Decidable, Single Translation Unit Applies to C90, C99 Ampli ﬁ cation None of the facilities that are speci ﬁ ed as being provided by <time.h> shall be used. In C99, t he identi ﬁ er wcsftime shall not be used and no macro with this name shall be expanded.",1
21.11,The standard header ﬁ le <tgmath.h>  shall not be used,"C99 [Unde ﬁ ned 184, 185] Category Required Analysis Decidable, Single Translation Unit Applies to C99 Ampli ﬁ cation None of the facilities that are speci ﬁ ed as being provided by <tgmath.h> shall be used.",184
21.12,The exception handling features of <fenv.h>  should not be used,"C99 [Unspeci ﬁ ed 27, 28; Unde ﬁ ned 109–111; Impl ementation J.3.6(8)] Category Advisory Analysis Decidable, Single Translation Unit Applies to C99 Ampli ﬁ cation The identi ﬁ ers feclearexcept , fegetexcept ﬂ ag, feraiseexcept , fesetexcept ﬂ ag and fetestexcept sh all not be used and no macro with one of these names shall be expanded. The macros FE_INEXACT , FE_DIVBYZERO , FE_UNDERFLOW , FE_OVERFLOW , FE_INVALID and FE_ALL_EXCEPT , along with any implementation-de ﬁ ned ﬂ oating-point exception macros, shall not be used.",1
22.1,All resources obtained dynamically by means of Standard Library ,"functions shall be explicitly released Category Required Analysis Undecidable, System Applies to C90, C99 Ampli ﬁ cation The Standard Library functions that allocate resources are malloc , calloc , realloc and fopen .",0
21.6,Rule 22.5 A pointer to a FILE object shall not be dereferenced,"Category Manda tory An alysis Undecidable, System Applies to C90, C99 Ampli ﬁ cation A pointer to a FILE object shall not be dereferenced directl y or indirectly (e.g.",1
1.1,Required Any implementation-de ﬁ ned behavio ur on which the output of the ,program depends shall be documented and understood Compilation and build Dir,1
1.1,Required The program shall contain no violations of the standard C syntax and ,"constraints , and shall not exceed the implementation’s translation limits Rule",1
8.12,"Required Within an enumerator list, the value of an implicitly-speci ﬁ ed ",enumeration constant shall be unique Rule,1
9.5,Required Where designated initializers are used to initialize an array object the ,size of the array shall be speci ﬁ ed explicitly The essential type model Rule,1
10.4,Required Both operands of an operator in which the usual arithmetic conversions  ,are performed shall have the same essential type category Rule,1
10.7,Required If a composite expression  is used as one operand of an operator in which ,the usual arithmetic conversions are performed then the other operand shall not have wider essential type Rule,1
14.4,Required The controlling expression of an if  statement and the controlling ,expression of an iteration-statement shall have essentially Boolean type Control ﬂ ow Rule,1
17.5,Advisory The function argument corresponding to a parameter declared to have ,an array type shall have an appropriate number of elements Rule,1
20.9,Required All identi ﬁ ers used in the controlling expression of #if  or #elif  ,preprocessing directives shall be #de ﬁ ne’d before evaluation Rule,0
20.12,"Required A macro parameter used as an operand to the # or ## operators, which ","is itself subject to further macro replacement, shall only be used as an operand to these operators Rule",0
22.1,Required All resources obtained dynamically by means of Standard Library ,functions shall be explicitly released Rule,1
14.2,is required insofar as the ,E.2 Documentation requirements for automatic code generation tools The developer of an automatic code generation tool shall provide documentation for each item listed in this section.,2
2.1,Implementation-de ﬁ ned behaviour and language extensions,"In accordance with Dir  1.1, the use of any implementation-de ﬁ ned behaviour on which automatically generated code depends shall be documented. In accordance with Rule  1.2, the use of language extensions by automatically generated code, and the methods by which their use is assured, shall be documented.In accordance with Dir  4.2, the use of assembly language by automatically generated code shall be documented.",1
2.2,The essential type model,"If an automati c code generator does not use the essential type model, then the strategy that it uses in its place shall be documented.",1
2.3,Run-time errors,"If the possibility for run-time failures remains, the error handling strategy used by the code generator shall be documented. Since it is likely that manually generated code will be needed in order to handle the error, the error handling interface shall be documented as part of the overall error handling strategy.",1
10.6,is that it avoids potential developer confusion regarding ,"However, the design speci ﬁ es that the integrator shall make its result available within a maximum of 10 microseconds in order to satisfy timing requirements of other functions.",2012
